<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="SqlTableStructureMapper">


    <!-- 查询数据库的所有表  MySql -->
    <select id="getMySqlAllTable" parameterType="pd" resultType="pd">
        select * from information_schema.tables where table_schema = #{databaseName} and table_type = 'BASE TABLE'
    </select>

    <!-- 查询数据库的所有表  PostgreSql -->
    <select id="getPostgreSqlAllTable" parameterType="pd" resultType="pd">
        select *, tablename as "table_name" from pg_tables where schemaname='public' order by tablename
    </select>

    <!-- 根据表名获取表结构  MySql -->
    <select id="getMySqlStructureByName" parameterType="pd" resultType="pd">
        select
            column_name,
            data_type,
            character_maximum_length as type_length,
            column_type,
            is_nullable,
            column_key,
            column_comment
        from information_schema.columns
        where table_schema = #{databaseName} and table_name = #{tableName}
    </select>

    <!-- 根据表名获取表结构  PostgreSql -->
    <select id="getPostgreSqlStructureByName" parameterType="pd" resultType="pd">
        select
            column_name,
            data_type,
            character_maximum_length as type_length,
            udt_name,
            is_nullable,
            (SELECT col_description(a.attrelid,a.attnum) FROM pg_class c,pg_attribute a
            where c.relname = #{tableName} and a.attrelid = c.oid and a.attnum > 0 and a.attname = column_name) as column_comment
        from information_schema."columns"
        where "table_name" = #{tableName}
    </select>

    <!-- 查询表主键列相关信息  PostgreSql -->
    <select id="getPrimaryKeyByName" resultType="pd" parameterType="pd">
        select
            pg_constraint.conname as pk_name,
            pg_attribute.attname as colname,
            pg_type.typname as typename
        from pg_constraint
        inner join pg_class on pg_constraint.conrelid = pg_class.oid
        inner join pg_attribute on pg_attribute.attrelid = pg_class.oid  and  pg_attribute.attnum = pg_constraint.conkey[1]
        inner join pg_type on pg_type.oid = pg_attribute.atttypid
        where pg_class.relname = #{tableName} and pg_constraint.contype='p' and pg_table_is_visible(pg_class.oid) limit 1
    </select>

    <!-- 查询表是否存在 -->
    <select id="isExistTable" resultType="int" parameterType="pd">
        <if test="selectType == 1">
            select count(1) as isExist from pg_class where relname = #{tableName}::name and relkind = 'r'
        </if>
        <if test="selectType != 1">
            select count(1) as isExist from information_schema.tables where table_schema = #{databaseName} and table_name = #{tableName}
        </if>
    </select>


</mapper>